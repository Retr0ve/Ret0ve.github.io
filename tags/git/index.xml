<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Retr0ve&#39;s Veil Cave</title>
    <link>http://Retr0ve.github.io/tags/git/</link>
    <description>Recent content in Git on Retr0ve&#39;s Veil Cave</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Feb 2021 20:03:14 +0800</lastBuildDate><atom:link href="http://Retr0ve.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git Commit Norm</title>
      <link>http://Retr0ve.github.io/posts/git-commit-norm/</link>
      <pubDate>Sun, 28 Feb 2021 20:03:14 +0800</pubDate>
      
      <guid>http://Retr0ve.github.io/posts/git-commit-norm/</guid>
      <description>Git 提交规范 在Git的整个流程中，commit作为一个必经之路，要求每次都必须说明这次提交的内容。但据我观察，长时间以来大部分程序员对此并不上心，经常出现不知所云的Commit message（类似：http://www.commitlogsfromlastnight.com/）。
为了避免这种糟糕的Commit message，是时候引入一个新的规范了（并不新。
01 作用 采用这种规范还有以下的好处：
  通过脚本生成CHANGELOG.md
在Angular规范中，他们使用了new features, bug fixes, breaking changes三个部分作为changlog的骨架。这一点可以作为参考。
  在git bisect时过滤不重要的commit
小的格式更改（加几个空格、空行，改一下缩进，加几句注释等等）可以被直接过滤掉。
  治愈你幼小的♥
  02 格式 Commit message包括三个部分：Header、Body和Footer。
 &amp;lt;type&amp;gt;(&amp;lt;scope&amp;gt;): &amp;lt;subject&amp;gt;&amp;lt;BLANK LINE&amp;gt;&amp;lt;body&amp;gt;&amp;lt;BLANK LINE&amp;gt;&amp;lt;footer&amp;gt;  其中，header 是必需的，body 和 footer 可以省略。 不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。
 特殊情况：
如果这一次提交的内容时回滚到了之前某一次的提交，它的格式会有所不同（如下）。
 revert：[回滚到那个版本的header]This reverts commit &amp;lt;hash&amp;gt;此处hash为被撤销 commit 的 SHA 标识符。
 2.1 Header Header部分只有一行，包括三个字段：type（必需）、scope（可选）和subject（必需）。
其中，type说明commit的类别：
 feat：新功能（feature） fix：修补bug docs：文档（documentation） style： 格式（不影响代码运行的变动） refactor：重构（即不是新增功能，也不是修改bug的代码变动） test：增加测试 chore：构建过程或辅助工具的变动   如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要。</description>
    </item>
    
  </channel>
</rss>
